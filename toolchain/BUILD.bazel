package(default_visibility = ["//visibility:public"])

load(":toolchains.bzl", "grpc_java_toolchain")

FLAVORS = {
    "normal": {
        "deps": [
            "@com_google_guava_guava//jar",
            "@com_google_protobuf//:protobuf_java",
            "@io_grpc_grpc_java//core",
            "@io_grpc_grpc_java//protobuf",
            "@io_grpc_grpc_java//stub",
            "@io_grpc_grpc_java//stub:javax_annotation",
        ],
        "exports": [
            "@com_google_protobuf//:protobuf_java",
            "@io_grpc_grpc_java//core",
            "@io_grpc_grpc_java//stub",
        ],
    },
    "lite": {
        "deps": [
            "@com_google_guava_guava//jar",
            "@io_grpc_grpc_java//core",
            "@io_grpc_grpc_java//protobuf-lite",
            "@io_grpc_grpc_java//stub",
            "@io_grpc_grpc_java//stub:javax_annotation",
        ],
        "exports": [
            "@io_grpc_grpc_java//core",
            "@io_grpc_grpc_java//protobuf-lite",
            "@io_grpc_grpc_java//stub",
        ],
    },
}

PLATFORMS = {
    "default": {
        "runtime_deps": ["@io_grpc_grpc_java//netty"],
        "target_compatible_with": [],
    },
    "android": {
        "runtime_deps": ["@io_grpc_grpc_java//okhttp"],
        "target_compatible_with": [
            "@bazel_tools//platforms:android",
        ],
    },
}

[toolchain_type(
    name = "%s_toolchain_type" % f,
) for f in FLAVORS.keys()]

[grpc_java_toolchain(
    name = "%s_%s" % (f, p),
    flavor = f,
    protoc = "@com_google_protobuf//:protoc",
    protoc_grpc_plugin = "//compiler:grpc_java_plugin",
    protoc_lite_plugin = "@com_google_protobuf_javalite//:protoc_gen_javalite" if f == "lite" else None,
    exports = FLAVORS[f]["exports"],
    runtime_deps = PLATFORMS[p]["runtime_deps"],
    deps = FLAVORS[f]["deps"],
) for f in FLAVORS.keys() for p in PLATFORMS.keys()]

[toolchain(
    name = "%s_%s_toolchain" % (f, p),
    target_compatible_with = PLATFORMS[p]["target_compatible_with"],
    toolchain = ":%s_%s" % (f, p),
    toolchain_type = ":%s_toolchain_type" % f,
) for f in FLAVORS.keys() for p in PLATFORMS.keys()]
